// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using VDC.Integration.EntityFramework.Database;

#nullable disable

namespace VDC.Integration.EntityFramework.Migrations
{
    [DbContext(typeof(DatabaseContext))]
    [Migration("20231218003843_vdc-initial")]
    partial class vdcinitial
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.0")
                .HasAnnotation("Proxies:ChangeTracking", false)
                .HasAnnotation("Proxies:CheckEquality", false)
                .HasAnnotation("Proxies:LazyLoading", true)
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("VDC.Integration.Domain.Entities.Database.IntegrationError", b =>
                {
                    b.Property<string>("Tag")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Description")
                        .HasMaxLength(400)
                        .HasColumnType("nvarchar(400)");

                    b.Property<string>("Message")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("MessagePattern")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("SourceId")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Tag");

                    b.ToTable("IntegrationErrors");
                });

            modelBuilder.Entity("VDC.Integration.Domain.Entities.Database.Integrations.Millenium.MillenniumImageIntegration", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Exception")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ExternalId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long>("IdProduto")
                        .HasColumnType("bigint");

                    b.Property<DateTime>("IntegrationDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("MillenniumIntegrationProductReferenceId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("MillenniumResult")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Payload")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<long>("TenantId")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.ToTable("MillenniumImageIntegrations");
                });

            modelBuilder.Entity("VDC.Integration.Domain.Entities.Database.Integrations.Millenium.MillenniumProductImageIntegration", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ExternalId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long>("IdProduto")
                        .HasColumnType("bigint");

                    b.Property<DateTime>("IntegrationDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("MillenniumIntegrationProductReferenceId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("MillenniumListProductProcessId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Payload")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Routine")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<long>("TenantId")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.ToTable("MillenniumProductImageIntegrations");
                });

            modelBuilder.Entity("VDC.Integration.Domain.Entities.Database.Integrations.Millenium.MillenniumProductIntegration", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("IntegrationDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("MillenniumNewProductProcessId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Payload")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ProductId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<long>("TenantId")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.ToTable("MillenniumProductIntegrations");
                });

            modelBuilder.Entity("VDC.Integration.Domain.Entities.Database.Integrations.Millenium.MillenniumProductPriceIntegration", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("IntegrationDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("MillenniumNewPriceProcessId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Payload")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ProductId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ProductSku")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<long>("TenantId")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.ToTable("MillenniumProductPriceIntegrations");
                });

            modelBuilder.Entity("VDC.Integration.Domain.Entities.Database.Integrations.Millenium.MillenniumProductStockIntegration", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("IntegrationDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("MillenniumNewStockProcessId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Payload")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ProductId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ProductSku")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<long>("TenantId")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.ToTable("MillenniumProductStockIntegrations");
                });

            modelBuilder.Entity("VDC.Integration.Domain.Entities.Database.Integrations.Millenium.MillenniumUpdateOrderProcess", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Exception")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MillenniumResponse")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long>("OrderId")
                        .HasColumnType("bigint");

                    b.Property<string>("Payload")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("ProcessDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("ShopifyListOrderProcessReferenceId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<long>("TenantId")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.ToTable("MillenniumUpdateOrderProcesses");
                });

            modelBuilder.Entity("VDC.Integration.Domain.Entities.Database.Integrations.Omie.OmieUpdateOrderProcess", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Exception")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("OmieResponse")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long>("OrderId")
                        .HasColumnType("bigint");

                    b.Property<string>("Payload")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("ProcessDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("ShopifyListOrderProcessReferenceId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<long>("TenantId")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.ToTable("OmieUpdateOrderProcesses");
                });

            modelBuilder.Entity("VDC.Integration.Domain.Entities.Database.Integrations.Shopify.ShopifyListOrderIntegration", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Action")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("IntegrationDate")
                        .HasColumnType("datetime2");

                    b.Property<long>("OrderId")
                        .HasColumnType("bigint");

                    b.Property<string>("Payload")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("ShopifyListOrderProcessId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<long>("TenantId")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.ToTable("ShopifyListOrderIntegrations");
                });

            modelBuilder.Entity("VDC.Integration.Domain.Entities.Database.Integrations.Shopify.ShopifyListOrderProcess", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Exception")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long>("OrderId")
                        .HasColumnType("bigint");

                    b.Property<DateTime>("ProcessDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("ShopifyResult")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long>("TenantId")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.ToTable("ShopifyListOrderProcesses");
                });

            modelBuilder.Entity("VDC.Integration.Domain.Entities.Database.Integrations.Shopify.ShopifyProductImageIntegration", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Exception")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ExternalProductId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("IntegrationDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Payload")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long?>("ProductShopifyId")
                        .HasColumnType("bigint");

                    b.Property<Guid?>("ReferenceIntegrationId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Result")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<long>("TenantId")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.ToTable("ShopifyProductImageIntegrations");
                });

            modelBuilder.Entity("VDC.Integration.Domain.Entities.Database.Integrations.Shopify.ShopifyProductIntegration", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("IntegrationDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Payload")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long?>("ProductShopifyId")
                        .HasColumnType("bigint");

                    b.Property<string>("ProductShopifySku")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("ReferenceIntegrationId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Result")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<long>("TenantId")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.ToTable("ShopifyProductIntegrations");
                });

            modelBuilder.Entity("VDC.Integration.Domain.Entities.Database.Integrations.Shopify.ShopifyProductPriceIntegration", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("IntegrationDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Payload")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long?>("ProductShopifyId")
                        .HasColumnType("bigint");

                    b.Property<string>("ProductShopifySku")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("ReferenceIntegrationId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Result")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<long>("TenantId")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.ToTable("ShopifyProductPriceIntegrations");
                });

            modelBuilder.Entity("VDC.Integration.Domain.Entities.Database.Integrations.Shopify.ShopifyProductStockIntegration", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("IntegrationDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Payload")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long?>("ProductShopifyId")
                        .HasColumnType("bigint");

                    b.Property<string>("ProductShopifySku")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("ReferenceIntegrationId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Result")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<long>("TenantId")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.ToTable("ShopifyProductStockIntegrations");
                });

            modelBuilder.Entity("VDC.Integration.Domain.Entities.Database.Integrations.Shopify.ShopifyUpdateOrderTagNumberProcess", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Exception")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("OrderExternalId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long>("OrderId")
                        .HasColumnType("bigint");

                    b.Property<string>("OrderNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("OrderUpdateMutationInput")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("ProcessDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("ShopifyListOrderProcessReferenceId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ShopifyResult")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long>("TenantId")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.ToTable("ShopifyUpdateOrderTagNumberProcesses");
                });

            modelBuilder.Entity("VDC.Integration.Domain.Entities.Database.Logs.LogsAbandonMessage", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreationDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Error")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("LogId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Method")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Payload")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<long>("TenantId")
                        .HasColumnType("bigint");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("WebJob")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("LogsAbandonMessages");
                });

            modelBuilder.Entity("VDC.Integration.Domain.Entities.Database.MethodPayment.MethodPayment", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("PaymentTypeMillenniun")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PaymentTypeShopify")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<long>("TenantId")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("TenantId");

                    b.ToTable("MethodPayment");
                });

            modelBuilder.Entity("VDC.Integration.Domain.Entities.Database.MillenniumListProductManualProcess", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Exception")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MillenniumResult")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("ProcessDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("ProductId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long>("TenantId")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.ToTable("MillenniumListProductManualProcesses");
                });

            modelBuilder.Entity("VDC.Integration.Domain.Entities.Database.MillenniumNewPricesProcess", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Exception")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long?>("FinalTransId")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("FinalUpdateDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("FirstPrice")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long?>("InitialTransId")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("InitialUpdateDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("LastPrice")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MillenniumResult")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("ProcessDate")
                        .HasColumnType("datetime2");

                    b.Property<long>("TenantId")
                        .HasColumnType("bigint");

                    b.Property<int?>("Top")
                        .HasColumnType("int");

                    b.Property<int>("TotalCount")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("MillenniumNewPricesProcesses");
                });

            modelBuilder.Entity("VDC.Integration.Domain.Entities.Database.MillenniumNewProductProcess", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Exception")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long?>("FinalTransId")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("FinalUpdateDate")
                        .HasColumnType("datetime2");

                    b.Property<long?>("InitialTransId")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("InitialUpdateDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("LastFirstAndLastIds")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MillenniumResult")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("ProcessDate")
                        .HasColumnType("datetime2");

                    b.Property<long>("TenantId")
                        .HasColumnType("bigint");

                    b.Property<int?>("Top")
                        .HasColumnType("int");

                    b.Property<int>("TotalCount")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("MillenniumNewProductProcesses");
                });

            modelBuilder.Entity("VDC.Integration.Domain.Entities.Database.MillenniumNewStockProcess", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Exception")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long?>("FinalTransId")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("FinalUpdateDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("FirstId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long?>("InitialTransId")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("InitialUpdateDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("LastId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MillenniumResult")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("ProcessDate")
                        .HasColumnType("datetime2");

                    b.Property<long>("TenantId")
                        .HasColumnType("bigint");

                    b.Property<int?>("Top")
                        .HasColumnType("int");

                    b.Property<int>("TotalCount")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("MillenniumNewStockProcesses");
                });

            modelBuilder.Entity("VDC.Integration.Domain.Entities.Database.MillenniumOrderStatusUpdate", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("CodPedidov")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreationDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Order")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("OrderStatus")
                        .HasColumnType("int");

                    b.Property<long>("TenantId")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.ToTable("MillenniumOrderStatusUpdate");
                });

            modelBuilder.Entity("VDC.Integration.Domain.Entities.Database.Param", b =>
                {
                    b.Property<string>("Key")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Values")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Key");

                    b.ToTable("Params");
                });

            modelBuilder.Entity("VDC.Integration.Domain.Entities.Database.Tenant", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<int>("BodyIntegrationType")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreationDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("DaysToDelivery")
                        .HasColumnType("int");

                    b.Property<DateTime?>("DeactivatedDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("DisableAddressParse")
                        .HasColumnType("bit");

                    b.Property<bool>("DisableCustomerDocument")
                        .HasColumnType("bit");

                    b.Property<bool>("ImageIntegrationEnabled")
                        .HasColumnType("bit");

                    b.Property<int>("IntegrationType")
                        .HasColumnType("int");

                    b.Property<long>("MinOrderId")
                        .HasColumnType("bigint");

                    b.Property<bool>("MultiLocation")
                        .HasColumnType("bit");

                    b.Property<bool>("OrderIntegrationStatus")
                        .HasColumnType("bit");

                    b.Property<bool>("ParsePhoneDDD")
                        .HasColumnType("bit");

                    b.Property<bool>("ProductDescriptionIsHTML")
                        .HasColumnType("bit");

                    b.Property<bool>("ProductGroupingEnabled")
                        .HasColumnType("bit");

                    b.Property<bool>("ProductIntegrationStatus")
                        .HasColumnType("bit");

                    b.Property<string>("Search")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("SetProductsAsUnpublished")
                        .HasColumnType("bit");

                    b.Property<string>("ShopifyAppJson")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ShopifyStoreDomain")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("Status")
                        .HasColumnType("bit");

                    b.Property<string>("StoreHandle")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("StoreName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("TenantLogging")
                        .HasColumnType("bit");

                    b.Property<int>("Type")
                        .HasColumnType("int");

                    b.Property<DateTime>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("WriteCategoryNameTags")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.ToTable("Tenants");
                });

            modelBuilder.Entity("VDC.Integration.Domain.Entities.Database.TenantData.LocationMap", b =>
                {
                    b.Property<long>("Id")
                        .HasColumnType("bigint");

                    b.Property<DateTime>("CreationDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("JsonMap")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("LocationMap");
                });

            modelBuilder.Entity("VDC.Integration.Domain.Entities.Database.TenantData.MillenniumData", b =>
                {
                    b.Property<long>("Id")
                        .HasColumnType("bigint");

                    b.Property<bool>("CapitalizeProductName")
                        .HasColumnType("bit");

                    b.Property<bool>("ControlPriceByUpdateDate")
                        .HasColumnType("bit");

                    b.Property<bool>("ControlProductByUpdateDate")
                        .HasColumnType("bit");

                    b.Property<bool>("ControlStockByUpdateDate")
                        .HasColumnType("bit");

                    b.Property<string>("CorDescription")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CorField")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreationDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("DescriptionField")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("EnableExtraPaymentInformation")
                        .HasColumnType("bit");

                    b.Property<bool>("EnableMaskedNSU")
                        .HasColumnType("bit");

                    b.Property<bool>("EnableProductDiscount")
                        .HasColumnType("bit");

                    b.Property<bool>("EnableProductKit")
                        .HasColumnType("bit");

                    b.Property<bool>("EnableSaveIntegrationInformations")
                        .HasColumnType("bit");

                    b.Property<bool>("EnableSaveProcessIntegrations")
                        .HasColumnType("bit");

                    b.Property<bool>("EnabledApprovedTransaction")
                        .HasColumnType("bit");

                    b.Property<bool>("EnabledStockMto")
                        .HasColumnType("bit");

                    b.Property<string>("EstampaDescription")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EstampaField")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ExcludedProductCharactersJson")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ExtraFieldConfigurationJson")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("HasZeroedPriceCase")
                        .HasColumnType("bit");

                    b.Property<string>("LoginJson")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NameField")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("NameSkuEnabled")
                        .HasColumnType("bit");

                    b.Property<string>("NameSkuField")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("NumberOfItensPerAPIQuery")
                        .HasColumnType("int");

                    b.Property<int>("OperatorType")
                        .HasColumnType("int");

                    b.Property<string>("OrderPrefix")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("ProductIntegrationPrice")
                        .HasColumnType("bit");

                    b.Property<bool>("SaleWithoutStockEnabled")
                        .HasColumnType("bit");

                    b.Property<bool>("SendDefaultCor")
                        .HasColumnType("bit");

                    b.Property<bool>("SendDefaultEstampa")
                        .HasColumnType("bit");

                    b.Property<bool>("SendDefaultTamanho")
                        .HasColumnType("bit");

                    b.Property<bool>("SendPaymentMethod")
                        .HasColumnType("bit");

                    b.Property<string>("SessionToken")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SkuFieldType")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("SplitEnabled")
                        .HasColumnType("bit");

                    b.Property<string>("StoreDomainByBrasPag")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TamanhoDescription")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TamanhoField")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Url")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UrlExtraPaymentInformation")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long>("VitrineId")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.ToTable("MillenniumData");
                });

            modelBuilder.Entity("VDC.Integration.Domain.Entities.Database.TenantData.MillenniumTransId", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<long>("MillenniumDataId")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("MillenniumLastUpdateDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("Type")
                        .HasColumnType("int");

                    b.Property<long>("Value")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("MillenniumDataId");

                    b.ToTable("MillenniumTransId");
                });

            modelBuilder.Entity("VDC.Integration.Domain.Entities.Database.TenantData.OmieData", b =>
                {
                    b.Property<long>("Id")
                        .HasColumnType("bigint");

                    b.Property<string>("AppKey")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("AppSecret")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("AppendSkuCode")
                        .HasColumnType("bit");

                    b.Property<string>("CategoryCaracteristicasJson")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CodigoCategoria")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long?>("CodigoCenarioImposto")
                        .HasColumnType("bigint");

                    b.Property<long?>("CodigoContaCorrente")
                        .HasColumnType("bigint");

                    b.Property<string>("CodigoEtapaPaymentConfirmed")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long?>("CodigoLocalEstoque")
                        .HasColumnType("bigint");

                    b.Property<bool>("CodigoParcelaFixa")
                        .HasColumnType("bit");

                    b.Property<string>("CodigoParcelaMappingJson")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreationDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("EscapeBodyPipe")
                        .HasColumnType("bit");

                    b.Property<string>("ExtraNotaFiscalEmailsJson")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FreteMappingJson")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NameField")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("NaoGerarFinanceiro")
                        .HasColumnType("bit");

                    b.Property<string>("NormalizeProductName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("OrderPrefix")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("ParcelaUnica")
                        .HasColumnType("bit");

                    b.Property<bool>("SendNotaFiscalEmailToClient")
                        .HasColumnType("bit");

                    b.Property<DateTime>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("VariantCaracteristicasJson")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("OmieData");
                });

            modelBuilder.Entity("VDC.Integration.Domain.Entities.Database.TenantData.ShopifyData", b =>
                {
                    b.Property<long>("Id")
                        .HasColumnType("bigint");

                    b.Property<bool>("BlockFulfillmentNotificationPerShipmentService")
                        .HasColumnType("bit");

                    b.Property<int>("BodyIntegrationType")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreationDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("DaysToDelivery")
                        .HasColumnType("int");

                    b.Property<int>("DelayProcessOfShopifyUpdateOrderMessages")
                        .HasColumnType("int");

                    b.Property<bool>("DisableAddressParse")
                        .HasColumnType("bit");

                    b.Property<bool>("DisableCustomerDocument")
                        .HasColumnType("bit");

                    b.Property<bool>("DisableUpdateProduct")
                        .HasColumnType("bit");

                    b.Property<bool>("EnableAuxiliaryCountry")
                        .HasColumnType("bit");

                    b.Property<bool>("EnableMaxVariantsQueryGraphQL")
                        .HasColumnType("bit");

                    b.Property<bool>("EnableSaveIntegrationInformations")
                        .HasColumnType("bit");

                    b.Property<bool>("EnableScheduledNextHour")
                        .HasColumnType("bit");

                    b.Property<bool>("EnableStockProductKit")
                        .HasColumnType("bit");

                    b.Property<bool>("HasProductKit")
                        .HasColumnType("bit");

                    b.Property<bool>("ImageIntegrationEnabled")
                        .HasColumnType("bit");

                    b.Property<string>("MaxVariantsQueryGraphQL")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long>("MinOrderId")
                        .HasColumnType("bigint");

                    b.Property<bool>("NotConsiderProductIfPriceIsZero")
                        .HasColumnType("bit");

                    b.Property<bool>("OrderIntegrationStatus")
                        .HasColumnType("bit");

                    b.Property<bool>("ParsePhoneDDD")
                        .HasColumnType("bit");

                    b.Property<bool>("ProductDescriptionIsHTML")
                        .HasColumnType("bit");

                    b.Property<bool>("ProductGroupingEnabled")
                        .HasColumnType("bit");

                    b.Property<bool>("ProductIntegrationStatus")
                        .HasColumnType("bit");

                    b.Property<bool>("SetProductsAsUnpublished")
                        .HasColumnType("bit");

                    b.Property<string>("ShipmentServicesForFulfillmentNotification")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("ShopifyAppJson")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ShopifyStoreDomain")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SkuFieldType")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("WriteCategoryNameTags")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.ToTable("ShopifyData");
                });

            modelBuilder.Entity("VDC.Integration.Domain.Entities.Database.UserProfile", b =>
                {
                    b.Property<string>("Id")
                        .HasMaxLength(450)
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Name")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.ToTable("UsersProfile");
                });

            modelBuilder.Entity("VDC.Integration.Domain.Entities.MercadoPago", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<string>("Authorization")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreationDate")
                        .HasColumnType("datetime2");

                    b.Property<long>("MillenniumDataId")
                        .HasColumnType("bigint");

                    b.Property<DateTime>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("MillenniumDataId")
                        .IsUnique();

                    b.ToTable("MercadoPago");
                });

            modelBuilder.Entity("VDC.Integration.Domain.Models.IntegrationCache", b =>
                {
                    b.Property<string>("Id")
                        .HasMaxLength(449)
                        .HasColumnType("nvarchar(449)");

                    b.Property<DateTimeOffset?>("AbsoluteExpiration")
                        .HasColumnType("datetimeoffset");

                    b.Property<DateTimeOffset>("ExpiresAtTime")
                        .HasColumnType("datetimeoffset");

                    b.Property<long?>("SlidingExpirationInSeconds")
                        .HasColumnType("bigint");

                    b.Property<byte[]>("Value")
                        .IsRequired()
                        .HasColumnType("varbinary(max)");

                    b.HasKey("Id");

                    b.HasIndex("ExpiresAtTime");

                    b.ToTable("IntegrationCache", "dbo");
                });

            modelBuilder.Entity("VDC.Integration.Domain.Entities.Database.MethodPayment.MethodPayment", b =>
                {
                    b.HasOne("VDC.Integration.Domain.Entities.Database.Tenant", "Tenant")
                        .WithMany("MethodPayments")
                        .HasForeignKey("TenantId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Tenant");
                });

            modelBuilder.Entity("VDC.Integration.Domain.Entities.Database.TenantData.LocationMap", b =>
                {
                    b.HasOne("VDC.Integration.Domain.Entities.Database.Tenant", null)
                        .WithOne("LocationMap")
                        .HasForeignKey("VDC.Integration.Domain.Entities.Database.TenantData.LocationMap", "Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("VDC.Integration.Domain.Entities.Database.TenantData.MillenniumData", b =>
                {
                    b.HasOne("VDC.Integration.Domain.Entities.Database.Tenant", null)
                        .WithOne("MillenniumData")
                        .HasForeignKey("VDC.Integration.Domain.Entities.Database.TenantData.MillenniumData", "Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("VDC.Integration.Domain.Entities.Database.TenantData.MillenniumTransId", b =>
                {
                    b.HasOne("VDC.Integration.Domain.Entities.Database.TenantData.MillenniumData", null)
                        .WithMany("TransIds")
                        .HasForeignKey("MillenniumDataId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("VDC.Integration.Domain.Entities.Database.TenantData.OmieData", b =>
                {
                    b.HasOne("VDC.Integration.Domain.Entities.Database.Tenant", null)
                        .WithOne("OmieData")
                        .HasForeignKey("VDC.Integration.Domain.Entities.Database.TenantData.OmieData", "Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("VDC.Integration.Domain.Entities.Database.TenantData.ShopifyData", b =>
                {
                    b.HasOne("VDC.Integration.Domain.Entities.Database.Tenant", null)
                        .WithOne("ShopifyData")
                        .HasForeignKey("VDC.Integration.Domain.Entities.Database.TenantData.ShopifyData", "Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("VDC.Integration.Domain.Entities.MercadoPago", b =>
                {
                    b.HasOne("VDC.Integration.Domain.Entities.Database.TenantData.MillenniumData", "MillenniumData")
                        .WithOne("MercadoPago")
                        .HasForeignKey("VDC.Integration.Domain.Entities.MercadoPago", "MillenniumDataId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("MillenniumData");
                });

            modelBuilder.Entity("VDC.Integration.Domain.Entities.Database.Tenant", b =>
                {
                    b.Navigation("LocationMap");

                    b.Navigation("MethodPayments");

                    b.Navigation("MillenniumData");

                    b.Navigation("OmieData");

                    b.Navigation("ShopifyData");
                });

            modelBuilder.Entity("VDC.Integration.Domain.Entities.Database.TenantData.MillenniumData", b =>
                {
                    b.Navigation("MercadoPago");

                    b.Navigation("TransIds");
                });
#pragma warning restore 612, 618
        }
    }
}
